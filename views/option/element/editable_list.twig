{% macro create(optionName, permission, inputId) %}

    {% set inline = getMetadata(optionName, 'INLINE')|join(' ') %}
    {% set description = getMetadata(optionName, 'DESCRIPTION') %}
    {% set elements = getMetadata(optionName, 'ELEMENTS') %}
    {% set angularAttributes = getMetadata(optionName, 'ANGULAR_ATTRIBUTES') %}
    {% set typeStructure = getMetadata(optionName, 'TYPE_STRUCTURE') %}
    {% set newNetwork = isOnNetworkDashboard() %}


    {% if permission == 2 or permission == 1 %}
        {% set  disabled = "disabled" %}
    {% else %}
        {% set disabled = "" %}
    {% endif %}

    {% if  newNetwork %}
        {% set angularAttributes = angularAttributes ~ ' && (0))"' %}
    {% else %}
        {% set angularAttributes = angularAttributes ~ '&& (1))"' %}
    {% endif %}

    <ul>
        <li ng-repeat="(key, value) in option.{{ optionName }} track by key">
            <div ng-if="option.{{ optionName }}[key] != ''">
                <input type="text" ng-model="option.{{ optionName }}[key]" {{ angularAttributes|raw }} {{ disabled }} >
                <button class="button"
                        ng-click="remove_{{ optionName }}(key)" {{ angularAttributes|raw }} {{ disabled }}>
                    <span class="nsp_dashicons dashicons dashicons-no-alt"></span>
                </button>
            </div>
        </li>
    </ul>

    <input type="text" ng-model="new_{{ optionName }}" {{ angularAttributes|raw }} {{ disabled }}>

    <button class="button button-primary"
            ng-click="add_{{ optionName }}(new_{{ optionName }})" {{ angularAttributes|raw }} {{ disabled }}>
        <span class="nsp_dashicons dashicons dashicons-plus"></span>
    </button>
    <br>
    

    {% import "option/element/description.twig" as descriptionElement %}
    {{ descriptionElement.create(description) }}

    <p>
        <span ng-bind="messages.{{ optionName }}" class="error-msg"></span>
    </p>
    
{% endmacro %}